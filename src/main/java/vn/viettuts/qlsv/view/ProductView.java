/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.viettuts.qlsv.view;

import vn.viettuts.qlsv.entity.Product;
import vn.viettuts.qlsv.utils.CalendarAdapter;
import vn.viettuts.qlsv.utils.CalendarUtils;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.awt.event.KeyListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

/**
 * @author ThinhTran
 */
public class ProductView extends javax.swing.JFrame {
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    private ActionListener radioButtonListener;

    /**
     * Creates new form ProductView
     */
    public ProductView() {
        initComponents();

        dpExpired.setDateFormatString("dd-MM-yyyy");
        dpImportDate.setDateFormatString("dd-MM-yyyy");
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(rCategory);
        buttonGroup.add(rSupplie);
        buttonGroup.add(rNone);


        rNone.setSelected(true);

        cbFilter.removeAllItems();

        CalendarUtils.disableDateChooserTextEditing(dpExpired);
        CalendarUtils.disableDateChooserTextEditing(dpImportDate);
        setLocationRelativeTo(null);


    }

    public void setRadioButtonListener(ActionListener actionListener) {
        this.radioButtonListener = actionListener;
        rCategory.addActionListener(radioButtonListener);
        rSupplie.addActionListener(radioButtonListener);
        rNone.addActionListener(radioButtonListener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbProducts = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        txtProductCategory = new javax.swing.JTextField();
        txtSupplier = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        dpExpired = new com.toedter.calendar.JDateChooser();
        cbFilter = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rCategory = new javax.swing.JRadioButton();
        rNone = new javax.swing.JRadioButton();
        rSupplie = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnSortById = new javax.swing.JButton();
        btnSortByName = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        dpImportDate = new com.toedter.calendar.JDateChooser();
        btnExport = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Tên nhà cung cấp", "Hạn sử dụng", "Số lượng", "Giá/Sản phẩm", "Ngày nhập"
            }
        ));
        tbProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbProducts);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 770, 359));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tìm kiếm:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 70, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên sản phẩm:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 168, 113, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Loại sản phẩm:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 208, 113, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên nhà cung cấp:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 248, -1, -1));
        getContentPane().add(txtProductId, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 128, 199, -1));
        getContentPane().add(txtProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 168, 199, -1));
        getContentPane().add(txtProductCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 208, 199, -1));
        getContentPane().add(txtSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 248, 199, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Hạn sử dụng:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 113, -1));

        btnAdd.setText("Thêm sản phẩm");
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 133, -1));

        btnUpdate.setText("Cập nhật sản phẩm");
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, -1, -1));

        btnDelete.setText("Xoá sản phẩm");
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 133, -1));

        btnRefresh.setText("Làm mới");
        getContentPane().add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, 133, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Số lượng:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 328, 113, -1));
        getContentPane().add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 328, 199, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Giá:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 37, -1));
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 368, 199, -1));
        getContentPane().add(dpExpired, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 288, 199, -1));

        cbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 26, 153, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Lọc");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 26, 37, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Theo");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 26, 37, -1));

        rCategory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rCategory.setForeground(new java.awt.Color(255, 255, 255));
        rCategory.setText("Loại sản phẩm");
        getContentPane().add(rCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, 120, -1));

        rNone.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rNone.setForeground(new java.awt.Color(255, 255, 255));
        rNone.setText("Không");
        getContentPane().add(rNone, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 98, -1));

        rSupplie.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rSupplie.setForeground(new java.awt.Color(255, 255, 255));
        rSupplie.setText("Tên nhà cung cấp");
        getContentPane().add(rSupplie, new org.netbeans.lib.awtextra.AbsoluteConstraints(885, 26, -1, -1));
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 26, 145, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Mã sản phẩm:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 128, 113, -1));

        btnSortById.setText("Sắp xếp theo mã sản phẩm");
        getContentPane().add(btnSortById, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, -1, -1));

        btnSortByName.setText("Sắp xếp theo tên sản phẩm");
        getContentPane().add(btnSortByName, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 470, 180, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Ngày nhập:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 80, -1));
        getContentPane().add(dpImportDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 408, 199, -1));

        btnExport.setText("Xuất");
        getContentPane().add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 133, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/z5536159931127_87ac2b07fee70f1c2fb43b06c741d660.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductsMouseClicked
        Product product = getProductSelected();
        if (product == null) {
            return;
        }

        txtProductId.setText(product.getId());
        txtProductName.setText(product.getProductName());
        txtProductCategory.setText(product.getProductCategory());
        txtSupplier.setText(product.getProductSupplier());
        dpExpired.setDate(CalendarUtils.convertStringToCalendar(product.getProductExpiredDate()).getTime());
        txtQuantity.setText(product.getQuantity());
        String price = product.getPrice().substring(0, product.getPrice().length() - 4);
        txtPrice.setText(price);
        dpImportDate.setDate(CalendarUtils.convertStringToCalendar(product.getImportDate()).getTime());

    }//GEN-LAST:event_tbProductsMouseClicked

    public void setDataToTable(List<Product> products) {
        DefaultTableModel model = (DefaultTableModel) tbProducts.getModel();
        model.setRowCount(0);
        for (Product product : products) {
            model.addRow(new Object[]{product.getId(), product.getProductName(), product.getProductCategory(), product.getProductSupplier(), product.getProductExpiredDate(), product.getQuantity(), String.format("%s VNĐ", product.getPrice()), product.getImportDate()});
        }
    }

    public Product getProductSelected() {
        int row = tbProducts.getSelectedRow();
        if (row == -1) {
            return null;
        }

        String id = tbProducts.getValueAt(row, 0).toString();
        String productName = tbProducts.getValueAt(row, 1).toString();
        String productCategory = tbProducts.getValueAt(row, 2).toString();
        String productSupplier = tbProducts.getValueAt(row, 3).toString();
        String expireDate = tbProducts.getValueAt(row, 4).toString();
        String quantity = tbProducts.getValueAt(row, 5).toString();
        String price = tbProducts.getValueAt(row, 6).toString();
        String importDate = tbProducts.getValueAt(row, 7).toString();
        Calendar calendar = CalendarUtils.convertStringToCalendar(expireDate);
        Calendar importDateCalendar = CalendarUtils.convertStringToCalendar(importDate);
        return new Product(id, productName, productCategory, productSupplier, calendar, quantity, price, importDateCalendar);
    }

    public Product getProductInput() {
        String id = txtProductId.getText();
        String productName = txtProductName.getText();
        String productCategory = txtProductCategory.getText();
        String productSupplier = txtSupplier.getText();
        String quantity = txtQuantity.getText();
        String price = txtPrice.getText();
        String expireDate;
        String importDate;


        if (id.isEmpty() || productName.isEmpty() || productCategory.isEmpty() || productSupplier.isEmpty() || quantity.isEmpty() || price.isEmpty()) {
            return null;
        }

        try {
            int quantityInt = Integer.parseInt(quantity);
            double priceDouble = Double.parseDouble(price);

            if (quantityInt < 0 || priceDouble < 0) {
                throw new IllegalArgumentException("Số lượng và giá sản phẩm phải lớn hơn 0.");
            }
        } catch (Exception e) {
            throw new IllegalArgumentException("Số lượng và giá sản phẩm phải là số.");
        }


        try {
            expireDate = dateFormat.format(dpExpired.getDate());
            importDate = dateFormat.format(dpImportDate.getDate());
        } catch (Exception e) {
            return null;
        }

        Calendar calendar = CalendarUtils.convertStringToCalendar(expireDate);
        Calendar importDateCalendar = CalendarUtils.convertStringToCalendar(importDate);
        return new Product(id, productName, productCategory, productSupplier, calendar, quantity, price, importDateCalendar);
    }

    public void setBtnAddActionListener(java.awt.event.ActionListener actionListener) {
        btnAdd.addActionListener(actionListener);
    }

    public void setBtnUpdateActionListener(java.awt.event.ActionListener actionListener) {
        btnUpdate.addActionListener(actionListener);
    }

    public void setBtnDeleteActionListener(java.awt.event.ActionListener actionListener) {
        btnDelete.addActionListener(actionListener);
    }

    public void setBtnRefreshActionListener(java.awt.event.ActionListener actionListener) {
        btnRefresh.addActionListener(actionListener);
    }

    public void setBtnSortByIdActionListener(java.awt.event.ActionListener actionListener) {
        btnSortById.addActionListener(actionListener);
    }

    public void setTxtSearchKeyListener(KeyListener keyListener) {
        txtSearch.addKeyListener(keyListener);
    }

    public void setBtnSortByNameActionListener(java.awt.event.ActionListener actionListener) {
        btnSortByName.addActionListener(actionListener);
    }

    public String getKeyword() {
        return txtSearch.getText().trim().toLowerCase();
    }


    public void setCbFilterActionListener(java.awt.event.ActionListener actionListener) {
        cbFilter.addActionListener(actionListener);
    }

//    public void setProductId(int id) {
//        txtProductId.setText(String.format("%04d", id + 1));
//    }

    public String getSearchText() {
        return txtSearch.getText().toLowerCase().trim();
    }

    public Optional<String> getFilter() {
        if (cbFilter.getSelectedIndex() == -1) {
            return Optional.empty();
        }
        return Optional.of(cbFilter.getSelectedItem().toString());
    }

    public String getRadioSelected() {
        if (rCategory.isSelected()) {
            return "category";
        } else if (rSupplie.isSelected()) {
            return "supplier";
        } else {
            return "none";
        }
    }

    public void setCbFilter(List<String> listFilter) {
        cbFilter.removeAllItems();
        for (String filter : listFilter) {
            cbFilter.addItem(filter);
        }
    }

    public void setBtnExportActionListener(java.awt.event.ActionListener actionListener) {
        btnExport.addActionListener(actionListener);
    }

    public void clear() {
//        txtProductId.setText(String.format("%04d", id + 1));
        txtProductId.setText("");
        txtProductName.setText("");
        txtProductCategory.setText("");
        txtSupplier.setText("");
        txtQuantity.setText("");
        txtPrice.setText("");
        dpExpired.setDate(null);
        dpImportDate.setDate(null);
        cbFilter.setSelectedIndex(-1);
        rNone.setSelected(true);
        tbProducts.clearSelection();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSortById;
    private javax.swing.JButton btnSortByName;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbFilter;
    private com.toedter.calendar.JDateChooser dpExpired;
    private com.toedter.calendar.JDateChooser dpImportDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rCategory;
    private javax.swing.JRadioButton rNone;
    private javax.swing.JRadioButton rSupplie;
    private javax.swing.JTable tbProducts;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductCategory;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSupplier;
    // End of variables declaration//GEN-END:variables
}
